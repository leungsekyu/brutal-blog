#!/bin/bash

# 重定向到 stderr 的函数
log() {
    echo "$1" >&2
}

log "脚本开始执行..."

# 获取当前日期并格式化
currentDate=$(date +"%Y-%m-%d %H:%M")
log "当前时间: $currentDate"

# 获取所有暂存区中的 md 文件
staged_files=$(git diff --cached --name-only | grep "^src/content/blog/.*\.md$")

if [ -z "$staged_files" ]; then
    log "没有找到任何暂存区中的 md 文件"
    log "脚本执行完成"
    exit 0
fi

for file in $staged_files; do
    log "正在处理文件: $file"
    
    log "调试: ⬇️ 文件状态信息 ⬇️"
    git status --porcelain "$file"
    
    # 检查文件在 git 中的状态
    file_status=$(git status --porcelain "$file" | cut -c1-2 | tr -d ' ')
    log "调试: 文件状态码 = [ $file_status ]"
    
    # 如果文件状态是 A (新增) 或 ?? (未跟踪)，则视为首次提交
    if [[ "$file_status" == "A" || "$file_status" == "??" ]]; then
        is_first_commit=true
        log "调试: 这是首次提交 (基于文件状态)"
    else
        is_first_commit=false
        log "调试: 文件已在版本控制中, 非首次提交 (基于文件状态)"
    fi

    if [ "$is_first_commit" = true ]; then
        # 首次提交：只处理 publishedAt
        if ! grep -q "publishedAt:" "$file"; then
            log "首次提交：未找到 publishedAt 字段，将在 author 后添加"
            sed -i '' '/^author:/a\
publishedAt: '"$currentDate"'\
' "$file"
            log "已添加 publishedAt 字段"
        else
            log "已找到 publishedAt 字段，即将更新为 $currentDate ..."
            sed -i '' "s/publishedAt: .*/publishedAt: $currentDate/" "$file"
            log "已更新 publishedAt 字段"
        fi
    else
        # 非首次提交：处理 publishedAt 和 updatedAt
        if ! grep -q "publishedAt:" "$file"; then
            log "非首次提交：未找到 publishedAt 字段，将在 author 后添加"
            sed -i '' '/^author:/a\
publishedAt: '"$currentDate"'\
' "$file"
            log "已添加 publishedAt 字段"
        else
            if grep -q "updatedAt:" "$file"; then
                log "已找到 updatedAt 字段，即将更新为 $currentDate "
                sed -i '' "s/updatedAt: .*/updatedAt: $currentDate/" "$file"
                log "已更新 updatedAt 字段"
            else
                log "未找到 updatedAt 字段，将在 publishedAt 后添加"
                sed -i '' '/^publishedAt:/a\
updatedAt: '"$currentDate"'\
' "$file"
                log "已添加 updatedAt 字段"
            fi
        fi
    fi

    # 将更新后的文件添加回暂存区
    git add "$file"
    log "已将 $file 添加回暂存区"
done

log "脚本执行完成"
exit 0