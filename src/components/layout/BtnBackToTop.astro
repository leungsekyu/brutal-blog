---
export interface Props {
  btnBackToTop?: boolean;
}

const { btnBackToTop = false } = Astro.props;
---

{
  btnBackToTop && (
    <button
      class:list={[
        btnBackToTop ? `btnBackToTop` : null,
        `card-shadow transition-300 fixed bottom-[10px] right-[30px] z-50 flex h-10 w-10 border border-black bg-white opacity-0`,
      ]}
    >
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="100%" height="100%" fill="none" stroke="currentColor" stroke-width="1.5">
        <path d="m4.5 15.75 7.5-7.5 7.5 7.5" stroke-linecap="round" stroke-linejoin="round" />
      </svg>
    </button>
  )
}

<script>
  document.addEventListener('astro:page-load', () => {
    const btnBackToTop = document.querySelector('.btnBackToTop');

    const toggleBackToTopButton = () => {
      const SCROLL_THRESHOLD = 250;

      if (window.scrollY > SCROLL_THRESHOLD) {
        btnBackToTop?.classList.add('active');
      } else {
        btnBackToTop?.classList.remove('active');
      }
    };
    window.addEventListener('scroll', toggleBackToTopButton);

    btnBackToTop?.addEventListener('click', () => {
      window.scrollTo({
        top: 0,
        behavior: 'smooth',
      });
    });
  });
</script>

<style>
  .btnBackToTop.active {
    opacity: 1;
  }
</style>
