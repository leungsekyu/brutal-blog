---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import BookmarkLink from '@components/bookmark/BookmarkLink.astro'
import BookmarkSection from '@components/bookmark/BookmarkSection.astro'
import { bookmarks } from '@data/bookmarks'
---

<DefaultLayout title="主页" pageTitle="主页" description="leungsekyu 的个人博客主页">
  <main class="bg-yellow p-6">
    {
      Object.entries(bookmarks).map(([category, links]) => (
        <BookmarkSection title={category}>
          <div class="flex flex-col gap-3">
            {links.map((link) => (
              <BookmarkLink site={link.site} name={link.name} tags={link.tags} favicon={link.favicon} />
            ))}
          </div>
        </BookmarkSection>
      ))
    }
  </main>
</DefaultLayout>

<script>
  import { selectedTags, toggleTag } from '../stores/tagStore'

  const bookmarkLinks = document.querySelectorAll('a[data-tags]') as NodeListOf<HTMLAnchorElement>

  // 为标签添加点击事件
  document.addEventListener('click', (e) => {
    const tagButton = (e.target as Element).closest('.tag-button')
    if (!tagButton) return

    e.preventDefault()
    const tag = tagButton.getAttribute('data-tag')
    console.log(tag)
    if (tag) toggleTag(tag)
  })

  // 监听标签变化
  selectedTags.subscribe((tags) => {
    console.log(tags)
    // 更新标签样式
    document.querySelectorAll('.tag-button').forEach((button) => {
      const tag = button.getAttribute('data-tag')
      if (!tag) return
      if (tags.has(tag)) {
        button.classList.remove('bg-white')
        button.classList.add('bg-blue')
      } else {
        button.classList.remove('bg-blue')
        button.classList.add('bg-white')
      }
    })

    // 过滤书签
    bookmarkLinks.forEach((link) => {
      const linkTags = JSON.parse(link.dataset.tags || '[]')
      const shouldShow = tags.size === 0 || Array.from(tags).every((tag) => linkTags.includes(tag))
      const parent = link.closest('.bookmark-item')
      parent?.classList.toggle('hidden', !shouldShow)
    })

    // 处理空分类
    document.querySelectorAll('.bookmark-section').forEach((section) => {
      const visibleLinks = section.querySelectorAll('.bookmark-item:not(.hidden)').length
      section.classList.toggle('hidden', visibleLinks === 0)
    })
  })
</script>
